{
    "branchPrefix": {
        "separator": "",
        "validator": "",
        "prefixes": {}
    },
    "commitPrefix": {
        "separator": " ",
        "validator": "^.{1,80}$",
        "prefixes": {
            ". F": "Safe/Proven Feature (addresses all known/unknown risks)",
            ". B": "Safe/Proven Bugfix (addresses all known/unknown risks)",
            ". R": "Safe/Proven Refactoring (addresses all known/unknown risks)",
            ". D": "Safe/Proven Documentation (addresses all known/unknown risks)",
            ". T": "Safe/Proven Testing (addresses all known/unknown risks)",
            "^ F": "Validated Feature (addresses all known risks, test-supported)",
            "^ B": "Validated Bugfix (addresses all known risks, test-supported)",
            "^ R": "Validated Refactoring (addresses all known risks, test-supported)",
            "^ D": "Validated Documentation (addresses all known risks, test-supported)",
            "^ T": "Validated Testing (addresses all known risks, test-supported)",
            "! F": "Risky Feature (some known risks remain unverified)",
            "! B": "Risky Bugfix (some known risks remain unverified)",
            "! R": "Risky Refactoring (some known risks remain unverified)",
            "! D": "Risky Documentation (some known risks remain unverified)",
            "! T": "Risky Testing (some known risks remain unverified)",
            "@ F": "Probably Broken Feature (no risk attestation, unfinished)",
            "@ B": "Probably Broken Bugfix (no risk attestation, unfinished)",
            "@ R": "Probably Broken Refactoring (no risk attestation, unfinished)",
            "@ D": "Probably Broken Documentation (no risk attestation, unfinished)",
            "@ T": "Probably Broken Testing (no risk attestation, unfinished)"
        }
    },
    "verboseMode": false,
    "aliases": [
        {
            "name": "undo",
            "command": "cls; git reset && git clean -xfd && git checkout . && npm i && gittey build",
            "description": "resets branch to last checked in state"
        },
        {
            "name": "push",
            "command": "cls && gittey pull && gittey build && gittey docs && gittey test && git push && git push --tags",
            "description": "performs a git push if tests are passing"
        },
        {
            "name": "save",
            "command": "gittey push",
            "description": "performs a git push if tests are passing"
        },
        {
            "name": "check",
            "command": "cls; gittey build && npm test",
            "description": "runs tests"
        },
        {
            "name": "test",
            "command": "gittey check && gittey commit",
            "description": "runs tests on on success commits the code"
        },
        {
            "name": "build",
            "command": "cls; npm run compile",
            "description": "builds output directory"
        },
        {
            "name": "docs",
            "command": "node ./dist/index.js ./documentation/doculisp.dlproj"
        }
    ],
    "collaborators": []
}